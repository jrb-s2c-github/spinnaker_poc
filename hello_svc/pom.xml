<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2019 Red Hat, Inc.
    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at:

        https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <artifactId>hello-svc</artifactId>
    <groupId>prmgmdpc-spinnakerpoc</groupId>
    <version>1.0.18</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.0</version>
    </parent>

    <name>PRMGMDPC Spinnaker POC :: Hello Service</name>

    <description>
        Spring Boot application with a single REST endpoint.
        Demonstrates how to build a project using Eclipse JKube JIB build strategy.
    </description>

    <properties>
        <jkube.version>1.0.2</jkube.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <jkube.build.strategy>jib</jkube.build.strategy>

<!--         <version.number>${git.commit.time}.${git.commit.id.abbrev}</version.number> -->
            <!--   <jkube.generator.name>172.17.33.117:443/spinnaker_poc/hello-svc:${project.version}</jkube.generator.name> moved to command line from jenkins -->
        <!--        <jkube.generator.name>localhost:5000/spinnaker_poc/hello-svc:${project.version}-{maven.build.timestamp}</jkube.generator.name>-->
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Nexus Release Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <dependencies>

        <!-- Boot generator  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>
        <!-- API, java.xml.bind module -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>2.3.2</version>
        </dependency>

        <!-- Runtime, com.sun.xml.bind module -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.2</version>
        </dependency>

    </dependencies>

    <build>
<!--        <finalName>$\{project.artifactId}-$\{project.version}-r$\{buildNumber}</finalName>-->
        <!--        <finalName>${project.artifactId}-${project.version}-${maven.build.timestamp}</finalName>-->
        <plugins>

<!--            <plugin>-->
<!--                <groupId>pl.project13.maven</groupId>-->
<!--                <artifactId>git-commit-id-plugin</artifactId>-->
<!--                <version>4.0.3</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>validate</phase>-->
<!--                        <goals>-->
<!--                            <goal>revision</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <dateFormat>yyyyMMdd-HHmmss</dateFormat>&lt;!&ndash;  human-readable part of the version number &ndash;&gt;-->
<!--                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>-->
<!--                    <generateGitPropertiesFile>true</generateGitPropertiesFile>&lt;!&ndash; somehow necessary. otherwise the variables are not available in the pom &ndash;&gt;-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.1.4</version>
                <configuration>
                    <from>
                        <image>openjdk:11-jdk-slim</image>
                    </from>
                    <to>
                        <image>docker.io/rbuhrmann/hello-svc</image>
                    </to>
<!--                    <container>-->
<!--                        <mainClass>org.eclipse.jkube.maven.sample.springboot.jib.HelloApplication</mainClass>-->
<!--                    </container>-->
                </configuration>
            </plugin>

        </plugins>
    </build>
    <profiles>
<!--        <profile>-->
<!--            <id>Jib-Zero-Config</id>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    <plugin>-->
<!--                        <groupId>org.eclipse.jkube</groupId>-->
<!--                        <artifactId>kubernetes-maven-plugin</artifactId>-->
<!--                        <version>${jkube.version}</version>-->
<!--                    </plugin>-->
<!--                </plugins>-->

<!--&lt;!&ndash;                <finalName>hello-svc-${version.number}</finalName>&ndash;&gt;-->
<!--            </build>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            <id>Jib-With-Assembly</id>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    <plugin>-->
<!--                        <groupId>org.eclipse.jkube</groupId>-->
<!--                        <artifactId>kubernetes-maven-plugin</artifactId>-->
<!--                        <version>${jkube.version}</version>-->
<!--                        <configuration>-->
<!--                            <images>-->
<!--                                <image>-->
<!--                                    <name>172.17.33.117:443/spinnaker-poc/hello-svc:${version.number}</name>-->
<!--                                    <build>-->
<!--                                         <from>fabric8/java-centos-openjdk8-jdk:1.5.6</from>-->
<!--                                        <assembly>-->
<!--                                            <inline>-->
<!--                                                <id>copy-test-file</id>-->
<!--                                                <files>-->
<!--                                                    <file>-->
<!--                                                        <source>-->
<!--                                                            ${project.basedir}/static/testFile.txt-->
<!--                                                        </source>-->
<!--                                                        <outputDirectory>static</outputDirectory>-->
<!--                                                    </file>-->
<!--                                                </files>-->
<!--                                            </inline>-->
<!--                                            <targetDir>/deployments</targetDir>-->
<!--                                        </assembly>-->
<!--                                        <cmd>java -jar /deployments/${project.artifactId}-${project.version}.jar</cmd>-->
<!--                                        <ports>-->
<!--                                            <port>9090</port>-->
<!--                                        </ports>-->
<!--                                    </build>-->
<!--                                </image>-->
<!--                            </images>-->
<!--                        </configuration>-->
<!--                    </plugin>-->

<!--                </plugins>-->
<!--            </build>-->
<!--        </profile>-->
    </profiles>

</project>
